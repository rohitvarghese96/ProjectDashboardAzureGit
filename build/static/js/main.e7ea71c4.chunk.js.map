{"version":3,"sources":["components/dashboardBody/dashboardBody.module.scss","components/dashboardFooter/dashboardFooter.module.scss","components/dashboard.module.scss","components/dashboardHeader/dashboardHeader.module.scss","components/dashboardHeader/dashboardHeader.tsx","components/dashboardBody/dashboardSubProjects/index.tsx","components/dashboardBody/dashboardAccordianItems/index.tsx","components/dashboardBody/dashboardBody.tsx","components/dashboardFooter/dashboardFooter.tsx","components/dashboard.tsx","index.tsx"],"names":["module","exports","initializeIcons","DashboardHeader","props","state","className","styles","header","href","logoWrap","Icon","iconName","logoImage","subHeader","subHeaderWrap","subHeaderItem","linkItem","homeLink","homeIcon","mlAuto","userProfile","userIconWrap","userName","divider","userDesignation","title","React","Component","window","innerWidth","DashboardSubProjects","subProject","this","SubProjectName","PendingRiskItems","getRiskCount","textDanger","textSuccess","PendingIssuesCount","getIssueCount","riskItems","RiskDetails","TotalBacklogItems","CompletedBacklogItems","CompletedBugItems","PendingBugItems","TotalBugItems","totalBugs","getTotalBugsCount","getOpenBugsCount","subProjectWrap","subProjectHeader","bgDangerLight","subProjectName","getSubProjectTitle","subProjectStatusWrap","subProjectStatusInner","subProjectStatus","bgDanger","bgWarning","bgSuccess","bgSuccessDark","getRiskStatus","subProjectType","getIssueStatus","dashboardLinkWrap","subProjectBody","subProjectBodyInner","highlightPanel","panelHead","riskPanel","riskItem","getRiskItems","map","risk","key","RiskTitle","workitemPanel","workitem","font500","getTotalBacklogItems","getClosedBacklogItems","getClosedBugsCount","getDefectRate","DashboardAccordianItems","open","togglePanel","bind","setState","project","name","accordianItem","activeAccItem","accordianHeader","accordianWrap","onClick","accordianIcon","accordianHeaderText","getProjectTitle","projectStatusBadge","projectOverallStatus","accordianPanel","autoHeight","autoHeightMin","autoHeightMax","renderTrackHorizontal","style","display","accordianPanelContent","getsubProjects","iWidth","DashboardBody","data","loadFlag","contentWrap","height","innerContentWrap","weekPickerWrap","weekPicker","btnPrevWeek","weekDate","btnNextWeek","getProjects","loader","DashboardFooter","footerWrap","footerItem","Dashboard","fetch","GetDashboardDetails_API","then","res","json","catch","error","console","toString","itsDashboard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7ea71c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mrAuto\":\"dashboardBody_mrAuto__19fok\",\"mlAuto\":\"dashboardBody_mlAuto__1VLM4\",\"bgDanger\":\"dashboardBody_bgDanger__Bst-a\",\"bgWarning\":\"dashboardBody_bgWarning__1xtFH\",\"bgSuccess\":\"dashboardBody_bgSuccess__3slYE\",\"bgSuccessDark\":\"dashboardBody_bgSuccessDark__1m3GS\",\"bgDangerLight\":\"dashboardBody_bgDangerLight__2TRmF\",\"bgWarningLight\":\"dashboardBody_bgWarningLight__1XKw6\",\"bgSuccessLight\":\"dashboardBody_bgSuccessLight__2Rux2\",\"textDanger\":\"dashboardBody_textDanger__251wO\",\"textSuccess\":\"dashboardBody_textSuccess__3E-0R\",\"textWarning\":\"dashboardBody_textWarning__lvWOY\",\"linkItem\":\"dashboardBody_linkItem__29s_o\",\"animateBorder\":\"dashboardBody_animateBorder__37cLo\",\"contentWrap\":\"dashboardBody_contentWrap__1Tgs_\",\"innerContentWrap\":\"dashboardBody_innerContentWrap__38b3D\",\"weekPickerWrap\":\"dashboardBody_weekPickerWrap__Bx9BM\",\"weekPicker\":\"dashboardBody_weekPicker__2cGQU\",\"btnPrevWeek\":\"dashboardBody_btnPrevWeek__6P99H\",\"btnNextWeek\":\"dashboardBody_btnNextWeek__2dlD7\",\"weekDate\":\"dashboardBody_weekDate__27dyd\",\"loader\":\"dashboardBody_loader__729hu\",\"spin\":\"dashboardBody_spin__37I3J\",\"accordianItem\":\"dashboardBody_accordianItem__odfxx\",\"accordianHeader\":\"dashboardBody_accordianHeader__1-k8c\",\"accordianIcon\":\"dashboardBody_accordianIcon__1E7J_\",\"accordianHeaderText\":\"dashboardBody_accordianHeaderText__FX-r1\",\"projectStatusBadge\":\"dashboardBody_projectStatusBadge__5i2TW\",\"blink\":\"dashboardBody_blink__3-gxC\",\"accordianPanel\":\"dashboardBody_accordianPanel__3TsF6\",\"accordianPanelContent\":\"dashboardBody_accordianPanelContent__1SlyY\",\"activeAccItem\":\"dashboardBody_activeAccItem__1K7uS\",\"subProjectWrap\":\"dashboardBody_subProjectWrap__1sLyB\",\"subProjectHeader\":\"dashboardBody_subProjectHeader__2qZb1\",\"subProjectName\":\"dashboardBody_subProjectName__22OYo\",\"subProjectStatusWrap\":\"dashboardBody_subProjectStatusWrap__3-AWi\",\"subProjectStatusInner\":\"dashboardBody_subProjectStatusInner__2Tppg\",\"subProjectStatus\":\"dashboardBody_subProjectStatus__UM2BT\",\"subProjectType\":\"dashboardBody_subProjectType__2xxQK\",\"dashboardLinkWrap\":\"dashboardBody_dashboardLinkWrap__3EJH8\",\"subProjectBody\":\"dashboardBody_subProjectBody__2oXXZ\",\"subProjectBodyInner\":\"dashboardBody_subProjectBodyInner__OJmmO\",\"highlightPanel\":\"dashboardBody_highlightPanel__2bz_N\",\"riskPanel\":\"dashboardBody_riskPanel__19iKA\",\"riskItem\":\"dashboardBody_riskItem__1GRvf\",\"workitemPanel\":\"dashboardBody_workitemPanel__3-Gul\",\"workitem\":\"dashboardBody_workitem__2FvGr\",\"panelHead\":\"dashboardBody_panelHead__-WSa0\",\"font500\":\"dashboardBody_font500__2xUKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mrAuto\":\"dashboardFooter_mrAuto__27tD-\",\"mlAuto\":\"dashboardFooter_mlAuto__PDhfg\",\"linkItem\":\"dashboardFooter_linkItem__394De\",\"animateBorder\":\"dashboardFooter_animateBorder__pFyO0\",\"footerWrap\":\"dashboardFooter_footerWrap__1_TnM\",\"footerItem\":\"dashboardFooter_footerItem__wVLqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itsDashboard\":\"dashboard_itsDashboard__3Xgpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mrAuto\":\"dashboardHeader_mrAuto__s6025\",\"mlAuto\":\"dashboardHeader_mlAuto__3Q27-\",\"header\":\"dashboardHeader_header__14moq\",\"logoWrap\":\"dashboardHeader_logoWrap__Ul13d\",\"logoImage\":\"dashboardHeader_logoImage__11P1U\",\"subHeader\":\"dashboardHeader_subHeader__3cbIF\",\"subHeaderWrap\":\"dashboardHeader_subHeaderWrap__3FfyY\",\"subHeaderItem\":\"dashboardHeader_subHeaderItem__1gRA6\",\"linkItem\":\"dashboardHeader_linkItem__2WGP1\",\"homeLink\":\"dashboardHeader_homeLink__ldIw9\",\"homeIcon\":\"dashboardHeader_homeIcon__1LL6i\",\"userProfile\":\"dashboardHeader_userProfile__3fkfg\",\"userIconWrap\":\"dashboardHeader_userIconWrap__ukT9d\",\"userName\":\"dashboardHeader_userName__lrj3G\",\"divider\":\"dashboardHeader_divider__ljffy\",\"userDesignation\":\"dashboardHeader_userDesignation__1gCEr\"};","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\n// import { Scrollbars } from 'react-custom-scrollbars';\nimport styles from './dashboardHeader.module.scss';\nimport '../dashboard.css';\ninitializeIcons();\n\n//const logoImage: any = require(\"../../../assets/avandeLogo.png\");\nexport interface IDashboardHeaderState {\n\n};\nexport interface IDashboardHeaderProp {\n\n};\n\nclass DashboardHeader extends React.Component<IDashboardHeaderProp, IDashboardHeaderState>{\n\n    constructor(props: IDashboardHeaderProp, state: IDashboardHeaderState) {\n        super(props, state);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return (\n\n            <header>\n                <div className={styles.header}>\n                    <a href=\"#a\" className={styles.logoWrap}>\n                        {/* <img alt=\"Avanade Logo\" src={logoImage} className={styles.logoImage} />  */}\n                        <Icon iconName=\"BIDashboard\" className={styles.logoImage} />\n                        <span>ITS Dashboard</span>\n                    </a>\n                </div>\n                <div className={styles.subHeader}>\n                    <ul className={styles.subHeaderWrap}>\n                        <li className={styles.subHeaderItem}>\n                            <a href=\"#a\" className={styles.linkItem +\" \"+styles.homeLink}>\n                                <Icon iconName=\"Home\" className={styles.homeIcon}/>\n                            </a>\n                        </li>\n                        <li className={styles.subHeaderItem +\" \"+ styles.mlAuto}>\n                            <div className={styles.userProfile}>\n                                <span className={styles.userIconWrap}><Icon iconName=\"Contact\" /></span>\n                                <span className={styles.userName}>Arine Mark</span>\n                                <span className={styles.divider}>&nbsp;</span>\n                                <span className={styles.userDesignation} title=\"Senior Software Developer\"> \n                                    Senior Software Developer\n                                </span>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </header>\n\n        );\n    }\n}\n\nexport default DashboardHeader;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { DatePicker } from 'office-ui-fabric-react'\nimport styles from '../dashboardBody.module.scss';\nimport '../../dashboard.css';\nimport $ from \"jquery\";\ninitializeIcons();\n\nexport interface IDashboardSubProjectsState {\n    open: boolean;\n};\nexport interface IDashboardSubProjectsProp {\n    subProject: any; \n\n};\nconst iWidth: any = window.innerWidth;\nclass DashboardSubProjects extends React.Component<IDashboardSubProjectsProp, IDashboardSubProjectsState>{\n\n    constructor(props: IDashboardSubProjectsProp, state: IDashboardSubProjectsState) {\n        super(props, state);\n\n        //Declaring Variables\n        var title= this.props.subProject;\n    }\n\n    private getSubProjectTitle(){\n        var subProjectTitle = this.props.subProject[0].SubProjectName;\n        return subProjectTitle;\n    }\n\n    private getRiskCount(){\n        var riskCount = this.props.subProject[3].PendingRiskItems;\n        return riskCount;\n    }\n\n    private getRiskStatus(){\n        var status;\n        var count = this.getRiskCount();\n        if(count > 0){\n            status = styles.textDanger;\n        } else {\n            status = styles.textSuccess;\n        }\n        return status;\n    }\n\n    private getIssueCount(){\n        var issueCount = this.props.subProject[4].PendingIssuesCount;\n        return issueCount;\n    }\n\n    private getIssueStatus(){\n        var status;\n        var count = this.getIssueCount();\n        if(count > 0){\n            status = styles.textDanger;\n        } else {\n            status = styles.textSuccess;\n        }\n        return status;\n    }\n\n    private getProjectHighlights(){\n        var highlights;\n    }\n\n    private getRiskItems(){\n        var riskItems = this.props.subProject[3].RiskDetails;     \n        if(riskItems!=null){\n            return riskItems;\n        } else {\n            return null;\n        }\n    }\n\n    private getTotalBacklogItems(){\n        var total = this.props.subProject[1].TotalBacklogItems;\n        return total\n    }\n\n    private getClosedBacklogItems(){\n        var total = this.props.subProject[1].CompletedBacklogItems;\n        return total\n    }\n\n    private getClosedBugsCount(){\n        var totalBugs = this.props.subProject[2].CompletedBugItems;\n        return totalBugs;\n    }\n\n    private getOpenBugsCount(){\n        var totalBugs = this.props.subProject[2].PendingBugItems;\n        return totalBugs;\n    }\n\n    private getTotalBugsCount(){\n        var totalBugs = this.props.subProject[2].TotalBugItems;\n        return totalBugs;\n    }\n\n    private getDefectRate(){\n        var totalBugs = this.getTotalBugsCount();\n        var openBugs = this.getOpenBugsCount();\n        return (openBugs/totalBugs);\n    }\n\n    \n    \n    render() {\n        return (\n            <div className={styles.subProjectWrap}>\n                {/* Header StatusWise */}\n                <div className={styles.subProjectHeader + \" \" + styles.bgDangerLight}>\n                    <div className={styles.subProjectName} title={this.getSubProjectTitle()}>{this.getSubProjectTitle()}</div>\n                    <div className={styles.subProjectStatusWrap}>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + styles.bgDanger}></span>\n                            <span>Delivery</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + styles.bgWarning}></span>\n                            <span>Timelines</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + styles.bgSuccess}></span>\n                            <span>Finance</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + styles.bgSuccessDark}></span>\n                            <span>Quality</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner + \" \" + this.getRiskStatus()}>\n                            <span className={styles.subProjectType}>Risks: </span>\n                            <span>{this.getRiskCount()}</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner + \" \" + this.getIssueStatus()}>\n                            <span className={styles.subProjectType}>Issues: </span>\n                            <span>{this.getIssueCount()}</span>\n                        </div>\n                    </div>\n                    <div className={styles.dashboardLinkWrap}>\n\n                        <a href=\"das\" className={styles.linkItem}> Dashboard</a>\n                    </div>\n                </div>\n                <div className={styles.subProjectBody}>\n                    <div className={styles.subProjectBodyInner}>\n                        <div className={styles.highlightPanel}>\n                            <div className={styles.panelHead}>\n                                Highlights\n                            </div>\n                            <div>\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet nemo harum voluptas aliquid\n                                rem possimus nostrum excepturi!Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n                                Amet nemo harum voluptas aliquid rem possimus nostrum excepturi!\n                            </div>\n                        </div>\n                        <div className={styles.riskPanel}>\n                            <div className={styles.panelHead}>\n                                Risks\n                            </div>\n                            <div>\n                                <ul className={styles.riskItem}>\n                                    {this.getRiskItems()!=null? \n                                        this.getRiskItems().map((risk:any) =>{\n                                            return(\n                                                <li key={risk.RiskTitle}>{risk.RiskTitle}</li>\n                                            )    \n                                        }):\n                                        <li>No risk items</li>\n                                    }   \n                                </ul>\n                            </div>\n                        </div>\n                        <div className={styles.workitemPanel}>\n                            <div className={styles.workitem}>\n                                <span className={styles.font500}>Backlog items:</span>  Total: {this.getTotalBacklogItems()}, \n                                Closed: {this.getClosedBacklogItems()}\n                            </div>\n                            <div className={styles.workitem}>\n                                <span className={styles.font500}>Bugs:</span>  Open: {this.getOpenBugsCount()},\n                                 Closed: {this.getClosedBugsCount()}\n                            </div>\n                            <div className={styles.workitem}>\n                                <span className={styles.font500}>Defect Rate:</span> {this.getDefectRate()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DashboardSubProjects;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { DatePicker } from 'office-ui-fabric-react'\nimport styles from '../dashboardBody.module.scss';\nimport '../../dashboard.css';\nimport $ from \"jquery\";\n\n//Components\nimport DashboardSubProjects from '../dashboardSubProjects';\n\ninitializeIcons();\n\nexport interface IDashboardAccordianItemsState {\n    open: boolean;\n};\nexport interface IDashboardAccordianItemsProp {\n    project: any;\n};\n\nconst iWidth: any = window.innerWidth;\nclass DashboardAccordianItems extends React.Component<IDashboardAccordianItemsProp, IDashboardAccordianItemsState>{\n\n    constructor(props: IDashboardAccordianItemsProp, state: IDashboardAccordianItemsState) {\n        super(props, state);\n        this.state = {\n            open: false,\n\n        };\n        this.togglePanel = this.togglePanel.bind(this);\n    }\n\n    public togglePanel() {\n        if (this.state.open) {\n            this.setState({\n                open: false,\n            });\n        } else {\n            this.setState({\n                open: true,\n\n            });\n        }\n    }\n\n    private projectOverallStatus(){\n        var projectData;\n        var overallStatus = styles.bgSuccess;\n        return overallStatus\n    }\n\n    private getProjectTitle(){\n        var projectTitle = this.props.project[0][0].name;\n        return projectTitle;\n    } \n\n    private getsubProjects(){\n        var subProjects = this.props.project[1];\n        return subProjects;\n    }\n\n    render() {\n        return (\n            <div className={this.state.open ? styles.accordianItem + \" \" + styles.activeAccItem : styles.accordianItem}>\n                {/* <div className={styles.accordianItem + \" \" + styles.activeAccItem}> */}\n                <div className={styles.accordianHeader}>\n                    <h2 className={styles.accordianWrap} onClick={() => this.togglePanel()}>\n                        <Icon iconName=\"ChevronRightSmall\" className={styles.accordianIcon} />\n                        <span className={styles.accordianHeaderText}>{this.getProjectTitle()}</span>\n                    </h2>\n                    <div className={styles.projectStatusBadge + \" \" + this.projectOverallStatus()}>\n                        Success\n                    </div>\n                </div>\n                <div className={styles.accordianPanel}>\n                    <Scrollbars\n                        autoHeight\n                        autoHeightMin={0}\n                        autoHeightMax={250}\n                        renderTrackHorizontal={() => <div style={{ display: \"none\" }}></div>}\n                    >\n                        <div className={styles.accordianPanelContent}>\n\n                            {\n                                this.getsubProjects().map((subProject: any) => {\n                                    return(\n                                        <DashboardSubProjects key={subProject} subProject={subProject}/>\n                                    )\n                                })\n                            }\n\n                        </div>\n\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DashboardAccordianItems;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { DatePicker } from 'office-ui-fabric-react'\nimport styles from './dashboardBody.module.scss';\nimport '../dashboard.css';\nimport $ from \"jquery\";\n\n//DashboardComponents\nimport DashboardAccordianItems from './dashboardAccordianItems';\n\ninitializeIcons();\n\nexport interface IDashboardBodyState {\n    open: boolean;\n};\nexport interface IDashboardBodyProp {\n    data: string[],\n    loadFlag: boolean\n};\nconst iWidth: any = window.innerWidth;\nclass DashboardBody extends React.Component<IDashboardBodyProp, IDashboardBodyState>{\n\n    constructor(props: IDashboardBodyProp, state: IDashboardBodyState) {\n        super(props, state);\n\n        var ProjectTitle = \"\";\n    }\n\n    private getProjects(){\n        var projects = this.props.data\n        return projects;\n    }\n\n    render() {\n        if(this.props.loadFlag){\n            return (\n                <div className={styles.contentWrap}>\n                    <Scrollbars\n                        //autoHide\n                        style={iWidth > \"768\" ? { height: 'calc(100vh - 165px)' } : { height: 'calc(100vh - 65px)' }}\n                        renderTrackHorizontal={() => <div style={{ display: \"none\" }}></div>}\n                    >\n                        <div className={styles.innerContentWrap}>\n\n                            <div className={styles.weekPickerWrap}>\n                                <div className={styles.weekPicker}>\n                                    <span className={styles.btnPrevWeek}><Icon iconName=\"ChevronLeftMed\" /></span>\n                                    <span className={styles.weekDate}>\n                                        {/* <DatePicker\n                                            className=\"customDatepicker1\"\n                                            placeholder=\"Select a date...\"\n                                            ariaLabel=\"Select a date\"\n                                            showMonthPickerAsOverlay={true}\n                                            \n                                        /> */}\n                                        15/09/2020\n                                    </span>\n                                    <span className={styles.btnNextWeek}><Icon iconName=\"ChevronRightMed\" /></span>\n                                </div>\n                            </div>\n\n\n                            <div className={styles.accordianWrap}>\n                                {\n                                    this.getProjects().map(project => {\n                                        return(\n                                            <DashboardAccordianItems key={project} project={project}/>\n                                        )\n                                    })\n                                }\n                            </div>\n\n                        </div>\n                    </Scrollbars>\n                </div>\n            );\n        } else{\n            return (\n                <div className={styles.contentWrap}>\n                    <div className={styles.loader}></div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default DashboardBody;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport styles from './dashboardFooter.module.scss';\nimport '../dashboard.css';\ninitializeIcons();\n\nexport interface IDashboardFooterState {\n\n};\nexport interface IDashboardFooterProp {\n\n};\n\nclass DashboardFooter extends React.Component<IDashboardFooterProp, IDashboardFooterState>{\n\n    constructor(props: IDashboardFooterProp, state: IDashboardFooterState) {\n        super(props, state);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return (\n\n            <footer>\n                <ul className={styles.footerWrap}>\n                    <li className={styles.footerItem}><strong>©2019 ITS Inc. All Rights Reserved.</strong></li>\n                    <li className={styles.footerItem +\" \"+ styles.mlAuto}>\n                        <a href=\"a\" className={styles.linkItem}>Company Policies</a>\n                    </li>\n                    <li className={styles.footerItem}><a href=\"a\" className={styles.linkItem}>Feedback & Support</a></li>\n                    <li className={styles.footerItem}><a href=\"a\" className={styles.linkItem}>T&C</a></li>\n                </ul>\n            </footer>\n\n        );\n    }\n}\n\nexport default DashboardFooter;","import React from 'react';\nimport { initializeIcons } from '@uifabric/icons';\nimport styles from './dashboard.module.scss';\nimport './dashboard.css';\n\n//Components\nimport DashboardHeader from './dashboardHeader/dashboardHeader';\nimport DashboardBody from './dashboardBody/dashboardBody';\nimport DashboardFooter from './dashboardFooter/dashboardFooter';\n\n//Config File\nimport { GetDashboardDetails_BASE, GetDashboardDetails_API, GetDashboardDetails_API_KEY } from '../configFile';\n\ninitializeIcons();\n\nexport interface IDashboardState {\n    data: string[],\n    loadFlag: boolean\n};\n\nexport interface IDashboardProp {\n   \n};\n\nclass Dashboard extends React.Component<IDashboardProp, IDashboardState>{\n\n    constructor(props: IDashboardProp, state: IDashboardState) {\n        super(props, state);\n\n        this.state = { data: [], loadFlag: false };\n    }\n\n    componentDidMount() {\n        var url = GetDashboardDetails_API + \"?code=\" + GetDashboardDetails_API_KEY; //For Local Host\n        //var url = GetDashboardDetails_BASE + GetDashboardDetails_API + \"?code=\" + GetDashboardDetails_API_KEY;\n        fetch(url)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({data: json, loadFlag: true});\n        })\n        .catch(error => console.error('API-ERROR:' + error.toString()));\n      }\n\n    render() {\n        return (\n            <div className={styles.itsDashboard}>\n                <DashboardHeader />\n                <DashboardBody loadFlag={this.state.loadFlag} data={this.state.data}/>\n                <DashboardFooter />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Import Component\nimport Dashboard from '../src/components/dashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}