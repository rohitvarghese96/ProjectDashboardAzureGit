{"version":3,"sources":["components/dashboardBody/dashboardBody.module.scss","components/dashboardFooter/dashboardFooter.module.scss","components/dashboard.module.scss","components/dashboardHeader/dashboardHeader.module.scss","components/dashboardHeader/dashboardHeader.tsx","components/dashboardBody/dashboardSubProjects/index.tsx","components/dashboardBody/dashboardAccordianItems/index.tsx","components/dashboardBody/dashboardBody.tsx","components/dashboardFooter/dashboardFooter.tsx","components/dashboard.tsx","index.tsx"],"names":["module","exports","initializeIcons","DashboardHeader","props","state","className","styles","header","href","logoWrap","Icon","iconName","logoImage","subHeader","subHeaderWrap","subHeaderItem","linkItem","homeLink","homeIcon","mlAuto","userProfile","userIconWrap","userName","divider","userDesignation","title","React","Component","window","innerWidth","DashboardSubProjects","subProject","this","SubProjectName","PendingRiskItems","getRiskCount","textDanger","textSuccess","PendingIssuesCount","getIssueCount","riskItems","RiskDetails","TotalBacklogItems","CompletedBacklogItems","CompletedBugItems","PendingBugItems","TotalBugItems","totalBugs","getTotalBugsCount","openBugs","getOpenBugsCount","Math","round","currentProject","Description","DeliveryRAG","PeopleRAG","FinanceRAG","QualityRAG","currentSubProjectTitle","getSubProjectTitle","ProjectDetails","map","project","ProjectName","getProjectDetails","split","status","bgWarningLight","bgSuccess","bgWarning","bgDanger","currentSubProject","deliveryStatus","peopleStatus","financeStatus","qualityStatus","bgDangerLight","bgSuccessLight","subProjectWrap","subProjectHeader","getProjectOverallStatus","subProjectName","subProjectStatusWrap","subProjectStatusInner","subProjectStatus","getProjectDeliveryStatus","getProjectPeopleStatus","getProjectFinanceStatus","getProjectQualityStatus","getRiskStatus","subProjectType","getIssueStatus","dashboardLinkWrap","subProjectBody","subProjectBodyInner","highlightPanel","panelHead","getProjectDescription","text","key","riskPanel","riskItem","getRiskItems","risk","RiskTitle","workitemPanel","workitem","font500","getTotalBacklogItems","getClosedBacklogItems","getClosedBugsCount","getDefectRate","DashboardAccordianItems","open","togglePanel","bind","setState","projectScore","style","message","name","accordianItem","activeAccItem","accordianHeader","accordianWrap","onClick","accordianIcon","accordianHeaderText","getProjectTitle","projectStatusBadge","projectOverallStatus","accordianPanel","autoHeight","autoHeightMin","autoHeightMax","renderTrackHorizontal","display","accordianPanelContent","getsubProjects","random","iWidth","DashboardBody","data","newScore","loadFlag","contentWrap","height","innerContentWrap","weekPickerWrap","weekPicker","btnPrevWeek","weekDate","btnNextWeek","getProjects","randomNumber","InterestingFacts","length","loader","Facts","Fact","DashboardFooter","footerWrap","footerItem","Dashboard","fetch","GetDashboardDetails_BASE","then","res","json","catch","error","console","toString","itsDashboard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d079c228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mrAuto\":\"dashboardBody_mrAuto__19fok\",\"mlAuto\":\"dashboardBody_mlAuto__1VLM4\",\"bgDanger\":\"dashboardBody_bgDanger__Bst-a\",\"bgWarning\":\"dashboardBody_bgWarning__1xtFH\",\"bgSuccess\":\"dashboardBody_bgSuccess__3slYE\",\"bgSuccessDark\":\"dashboardBody_bgSuccessDark__1m3GS\",\"bgDangerLight\":\"dashboardBody_bgDangerLight__2TRmF\",\"bgWarningLight\":\"dashboardBody_bgWarningLight__1XKw6\",\"bgSuccessLight\":\"dashboardBody_bgSuccessLight__2Rux2\",\"textDanger\":\"dashboardBody_textDanger__251wO\",\"textSuccess\":\"dashboardBody_textSuccess__3E-0R\",\"textWarning\":\"dashboardBody_textWarning__lvWOY\",\"linkItem\":\"dashboardBody_linkItem__29s_o\",\"animateBorder\":\"dashboardBody_animateBorder__37cLo\",\"contentWrap\":\"dashboardBody_contentWrap__1Tgs_\",\"innerContentWrap\":\"dashboardBody_innerContentWrap__38b3D\",\"weekPickerWrap\":\"dashboardBody_weekPickerWrap__Bx9BM\",\"weekPicker\":\"dashboardBody_weekPicker__2cGQU\",\"btnPrevWeek\":\"dashboardBody_btnPrevWeek__6P99H\",\"btnNextWeek\":\"dashboardBody_btnNextWeek__2dlD7\",\"weekDate\":\"dashboardBody_weekDate__27dyd\",\"loader\":\"dashboardBody_loader__729hu\",\"spin\":\"dashboardBody_spin__37I3J\",\"Facts\":\"dashboardBody_Facts__yZixF\",\"accordianItem\":\"dashboardBody_accordianItem__odfxx\",\"accordianHeader\":\"dashboardBody_accordianHeader__1-k8c\",\"accordianIcon\":\"dashboardBody_accordianIcon__1E7J_\",\"accordianHeaderText\":\"dashboardBody_accordianHeaderText__FX-r1\",\"projectStatusBadge\":\"dashboardBody_projectStatusBadge__5i2TW\",\"blink\":\"dashboardBody_blink__3-gxC\",\"accordianPanel\":\"dashboardBody_accordianPanel__3TsF6\",\"accordianPanelContent\":\"dashboardBody_accordianPanelContent__1SlyY\",\"activeAccItem\":\"dashboardBody_activeAccItem__1K7uS\",\"subProjectWrap\":\"dashboardBody_subProjectWrap__1sLyB\",\"subProjectHeader\":\"dashboardBody_subProjectHeader__2qZb1\",\"subProjectName\":\"dashboardBody_subProjectName__22OYo\",\"subProjectStatusWrap\":\"dashboardBody_subProjectStatusWrap__3-AWi\",\"subProjectStatusInner\":\"dashboardBody_subProjectStatusInner__2Tppg\",\"subProjectStatus\":\"dashboardBody_subProjectStatus__UM2BT\",\"subProjectType\":\"dashboardBody_subProjectType__2xxQK\",\"dashboardLinkWrap\":\"dashboardBody_dashboardLinkWrap__3EJH8\",\"subProjectBody\":\"dashboardBody_subProjectBody__2oXXZ\",\"subProjectBodyInner\":\"dashboardBody_subProjectBodyInner__OJmmO\",\"highlightPanel\":\"dashboardBody_highlightPanel__2bz_N\",\"riskPanel\":\"dashboardBody_riskPanel__19iKA\",\"riskItem\":\"dashboardBody_riskItem__1GRvf\",\"workitemPanel\":\"dashboardBody_workitemPanel__3-Gul\",\"workitem\":\"dashboardBody_workitem__2FvGr\",\"panelHead\":\"dashboardBody_panelHead__-WSa0\",\"font500\":\"dashboardBody_font500__2xUKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mrAuto\":\"dashboardFooter_mrAuto__27tD-\",\"mlAuto\":\"dashboardFooter_mlAuto__PDhfg\",\"linkItem\":\"dashboardFooter_linkItem__394De\",\"animateBorder\":\"dashboardFooter_animateBorder__pFyO0\",\"footerWrap\":\"dashboardFooter_footerWrap__1_TnM\",\"footerItem\":\"dashboardFooter_footerItem__wVLqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itsDashboard\":\"dashboard_itsDashboard__3Xgpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mrAuto\":\"dashboardHeader_mrAuto__s6025\",\"mlAuto\":\"dashboardHeader_mlAuto__3Q27-\",\"header\":\"dashboardHeader_header__14moq\",\"logoWrap\":\"dashboardHeader_logoWrap__Ul13d\",\"logoImage\":\"dashboardHeader_logoImage__11P1U\",\"subHeader\":\"dashboardHeader_subHeader__3cbIF\",\"subHeaderWrap\":\"dashboardHeader_subHeaderWrap__3FfyY\",\"subHeaderItem\":\"dashboardHeader_subHeaderItem__1gRA6\",\"linkItem\":\"dashboardHeader_linkItem__2WGP1\",\"homeLink\":\"dashboardHeader_homeLink__ldIw9\",\"homeIcon\":\"dashboardHeader_homeIcon__1LL6i\",\"userProfile\":\"dashboardHeader_userProfile__3fkfg\",\"userIconWrap\":\"dashboardHeader_userIconWrap__ukT9d\",\"userName\":\"dashboardHeader_userName__lrj3G\",\"divider\":\"dashboardHeader_divider__ljffy\",\"userDesignation\":\"dashboardHeader_userDesignation__1gCEr\"};","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\n// import { Scrollbars } from 'react-custom-scrollbars';\nimport styles from './dashboardHeader.module.scss';\nimport '../dashboard.css';\ninitializeIcons();\n\n//const logoImage: any = require(\"../../../assets/avandeLogo.png\");\nexport interface IDashboardHeaderState {\n\n};\nexport interface IDashboardHeaderProp {\n\n};\n\nclass DashboardHeader extends React.Component<IDashboardHeaderProp, IDashboardHeaderState>{\n\n    constructor(props: IDashboardHeaderProp, state: IDashboardHeaderState) {\n        super(props, state);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return (\n\n            <header>\n                <div className={styles.header}>\n                    <a href=\"#a\" className={styles.logoWrap}>\n                        {/* <img alt=\"Avanade Logo\" src={logoImage} className={styles.logoImage} />  */}\n                        <Icon iconName=\"BIDashboard\" className={styles.logoImage} />\n                        <span>ITS Dashboard</span>\n                    </a>\n                </div>\n                <div className={styles.subHeader}>\n                    <ul className={styles.subHeaderWrap}>\n                        <li className={styles.subHeaderItem}>\n                            <a href=\"#a\" className={styles.linkItem +\" \"+styles.homeLink}>\n                                <Icon iconName=\"Home\" className={styles.homeIcon}/>\n                            </a>\n                        </li>\n                        <li className={styles.subHeaderItem +\" \"+ styles.mlAuto}>\n                            <div className={styles.userProfile}>\n                                <span className={styles.userIconWrap}><Icon iconName=\"Contact\" /></span>\n                                <span className={styles.userName}>Rikin Panchal</span>\n                                <span className={styles.divider}>&nbsp;</span>\n                                <span className={styles.userDesignation} title=\"Technology Delivery Lead Senior Manager\"> \n                                    Technology Delivery Lead Senior Manager\n                                </span>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </header>\n\n        );\n    }\n}\n\nexport default DashboardHeader;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { DatePicker } from 'office-ui-fabric-react'\nimport styles from '../dashboardBody.module.scss';\nimport '../../dashboard.css';\nimport $ from \"jquery\";\ninitializeIcons();\n\nexport interface IDashboardSubProjectsState {\n    open: boolean;\n};\nexport interface IDashboardSubProjectsProp {\n    subProject: any; \n\n};\nconst iWidth: any = window.innerWidth;\nclass DashboardSubProjects extends React.Component<IDashboardSubProjectsProp, IDashboardSubProjectsState>{\n\n    constructor(props: IDashboardSubProjectsProp, state: IDashboardSubProjectsState) {\n        super(props, state);\n\n        //Declaring Variables\n        var title= this.props.subProject;\n    }\n\n    private getSubProjectTitle(){\n        var subProjectTitle = this.props.subProject[0].SubProjectName;\n        return subProjectTitle;\n    }\n\n    private getRiskCount(){\n        var riskCount = this.props.subProject[3].PendingRiskItems;\n        return riskCount;\n    }\n\n    private getRiskStatus(){\n        var status;\n        var count = this.getRiskCount();\n        if(count > 0){\n            status = styles.textDanger;\n        } else {\n            status = styles.textSuccess;\n        }\n        return status;\n    }\n\n    private getIssueCount(){\n        var issueCount = this.props.subProject[4].PendingIssuesCount;\n        return issueCount;\n    }\n\n    private getIssueStatus(){\n        var status;\n        var count = this.getIssueCount();\n        if(count > 0){\n            status = styles.textDanger;\n        } else {\n            status = styles.textSuccess;\n        }\n        return status;\n    }\n\n    private getRiskItems(){\n        var riskItems = this.props.subProject[3].RiskDetails;     \n        if(riskItems!=null){\n            return riskItems;\n        } else {\n            return null;\n        }\n    }\n\n    private getTotalBacklogItems(){\n        var total = this.props.subProject[1].TotalBacklogItems;\n        return total\n    }\n\n    private getClosedBacklogItems(){\n        var total = this.props.subProject[1].CompletedBacklogItems;\n        return total\n    }\n\n    private getClosedBugsCount(){\n        var totalBugs = this.props.subProject[2].CompletedBugItems;\n        return totalBugs;\n    }\n\n    private getOpenBugsCount(){\n        var totalBugs = this.props.subProject[2].PendingBugItems;\n        return totalBugs;\n    }\n\n    private getTotalBugsCount(){\n        var totalBugs = this.props.subProject[2].TotalBugItems;\n        return totalBugs;\n    }\n\n    private getDefectRate(){\n        var totalBugs = this.getTotalBugsCount();\n        var openBugs = this.getOpenBugsCount();\n        var defectRate = Math.round((openBugs/totalBugs)*100)/100;\n        return defectRate;\n    }\n\n    private getProjectDetails(){\n        var currentProject = {\n            Description: \"No highlights\",\n            DeliveryRAG: null,\n            PeopleRAG: null,\n            FinanceRAG: null,\n            QualityRAG: null\n        };\n\n        var currentSubProjectTitle = this.getSubProjectTitle();\n        var subProjects = this.props.subProject[5].ProjectDetails;\n\n        subProjects.map((project:any) => {\n            if(currentSubProjectTitle === project.ProjectName){\n                currentProject = project;\n            }\n        });\n\n        return currentProject;\n    }\n\n\n    private getProjectDescription(){\n        var currentSubProject = this.getProjectDetails();\n        var description = currentSubProject.Description;\n        var finalDescription = description.split(\"&nbsp;\");\n        \n        return finalDescription;\n    }\n\n    private getProjectPeopleStatus(){\n        var currentSubProject = this.getProjectDetails();\n        var status = currentSubProject.PeopleRAG;\n\n        if(status === null){\n            return(styles.bgWarningLight);\n        } else if(status === \"GREEN\"){\n            return(styles.bgSuccess);\n        } else if(status === \"AMBER\"){\n            return(styles.bgWarning);\n        } else if(status === \"RED\"){\n            return(styles.bgDanger)\n        } else{\n            return(styles.bgWarningLight);\n        }\n    }\n\n    private getProjectFinanceStatus(){\n        var currentSubProject = this.getProjectDetails();\n        var status = currentSubProject.FinanceRAG;\n\n        if(status === null){\n            return(styles.bgWarningLight);\n        } else if(status === \"GREEN\"){\n            return(styles.bgSuccess);\n        } else if(status === \"AMBER\"){\n            return(styles.bgWarning);\n        } else if(status === \"RED\"){\n            return(styles.bgDanger)\n        } else{\n            return(styles.bgWarningLight);\n        }\n    }\n\n    private getProjectQualityStatus(){\n        var currentSubProject = this.getProjectDetails();\n        var status = currentSubProject.QualityRAG;\n\n        if(status === null){\n            return(styles.bgWarningLight);\n        } else if(status === \"GREEN\"){\n            return(styles.bgSuccess);\n        } else if(status === \"AMBER\"){\n            return(styles.bgWarning);\n        } else if(status === \"RED\"){\n            return(styles.bgDanger)\n        } else{\n            return(styles.bgWarningLight);\n        }\n    }\n\n    private getProjectDeliveryStatus(){\n        var currentSubProject = this.getProjectDetails();\n        var status = currentSubProject.DeliveryRAG;\n\n        if(status === null){\n            return(styles.bgWarningLight);\n        } else if(status === \"GREEN\"){\n            return(styles.bgSuccess);\n        } else if(status === \"AMBER\"){\n            return(styles.bgWarning);\n        } else if(status === \"RED\"){\n            return(styles.bgDanger)\n        } else{\n            return(styles.bgWarningLight);\n        }\n    }\n\n    private getProjectOverallStatus(){\n        var currentSubProject = this.getProjectDetails();\n        var deliveryStatus = currentSubProject.DeliveryRAG;\n        var peopleStatus = currentSubProject.PeopleRAG;\n        var financeStatus = currentSubProject.FinanceRAG;\n        var qualityStatus = currentSubProject.QualityRAG;\n\n        if(deliveryStatus === \"RED\" || peopleStatus === \"RED\" || financeStatus === \"RED\" || qualityStatus === \"RED\"){\n            return(styles.bgDangerLight);\n        } else {\n            return(styles.bgSuccessLight);\n        }\n    }\n\n    render() {\n        return (\n            <div className={styles.subProjectWrap}>\n                {/* Header StatusWise */}\n                <div className={styles.subProjectHeader + \" \" + this.getProjectOverallStatus()}>\n                    <div className={styles.subProjectName} title={this.getSubProjectTitle()}>{this.getSubProjectTitle()}</div>\n                    <div className={styles.subProjectStatusWrap}>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + this.getProjectDeliveryStatus()}></span>\n                            <span>Delivery</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + this.getProjectPeopleStatus()}></span>\n                            <span>People</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + this.getProjectFinanceStatus()}></span>\n                            <span>Finance</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner}>\n                            <span className={styles.subProjectStatus + \" \" + this.getProjectQualityStatus()}></span>\n                            <span>Quality</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner + \" \" + this.getRiskStatus()}>\n                            <span className={styles.subProjectType}>Risks: </span>\n                            <span>{this.getRiskCount()}</span>\n                        </div>\n                        <div className={styles.subProjectStatusInner + \" \" + this.getIssueStatus()}>\n                            <span className={styles.subProjectType}>Issues: </span>\n                            <span>{this.getIssueCount()}</span>\n                        </div>\n                    </div>\n                    <div className={styles.dashboardLinkWrap}>\n\n                        <a href=\"das\" className={styles.linkItem}> Dashboard</a>\n                    </div>\n                </div>\n                <div className={styles.subProjectBody}>\n                    <div className={styles.subProjectBodyInner}>\n                        <div className={styles.highlightPanel}>\n                            <div className={styles.panelHead}>\n                                Highlights\n                            </div>\n                            <div>\n                                {this.getProjectDescription().map(text => {\n                                    return(\n                                        <p key={text}>{text}</p>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                        <div className={styles.riskPanel}>\n                            <div className={styles.panelHead}>\n                                Risks\n                            </div>\n                            <div>\n                                <ul className={styles.riskItem}>\n                                    {this.getRiskItems()!=null? \n                                        this.getRiskItems().map((risk:any) =>{\n                                            return(\n                                                <li key={risk.RiskTitle}>{risk.RiskTitle}</li>\n                                            )    \n                                        }):\n                                        <li>No risk items</li>\n                                    }   \n                                </ul>\n                            </div>\n                        </div>\n                        <div className={styles.workitemPanel}>\n                            <div className={styles.workitem}>\n                                <span className={styles.font500}>Backlog items:</span>  Total: {this.getTotalBacklogItems()}, \n                                Closed: {this.getClosedBacklogItems()}\n                            </div>\n                            <div className={styles.workitem}>\n                                <span className={styles.font500}>Bugs:</span>  Open: {this.getOpenBugsCount()},\n                                 Closed: {this.getClosedBugsCount()}\n                            </div>\n                            <div className={styles.workitem}>\n                                <span className={styles.font500}>Defect Rate:</span> {this.getDefectRate()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DashboardSubProjects;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { DatePicker } from 'office-ui-fabric-react'\nimport styles from '../dashboardBody.module.scss';\nimport '../../dashboard.css';\nimport $ from \"jquery\";\n\n//Components\nimport DashboardSubProjects from '../dashboardSubProjects';\n\ninitializeIcons();\n\nexport interface IDashboardAccordianItemsState {\n    open: boolean;\n};\nexport interface IDashboardAccordianItemsProp {\n    project: any,\n    projectScore: any\n};\n\nconst iWidth: any = window.innerWidth;\nclass DashboardAccordianItems extends React.Component<IDashboardAccordianItemsProp, IDashboardAccordianItemsState>{\n\n    constructor(props: IDashboardAccordianItemsProp, state: IDashboardAccordianItemsState) {\n        super(props, state);\n        this.state = {\n            open: false,\n\n        };\n        this.togglePanel = this.togglePanel.bind(this);\n    }\n\n    public togglePanel() {\n        if (this.state.open) {\n            this.setState({\n                open: false,\n            });\n        } else {\n            this.setState({\n                open: true,\n\n            });\n        }\n    }\n\n    private projectOverallStatus(){\n\n        if(this.props.projectScore === 30){\n            //Success\n            return{style:styles.bgSuccess, message:\"Success!\"}\n\n        } else if(this.props.projectScore === 20){\n            //Warning\n            return{style:styles.bgWarning, message:\"Warning!\"}\n        } else{\n            //Need attention\n            return{style:styles.bgDanger, message:\"Need Attention!\"}\n        }\n    }\n\n    private getProjectTitle(){\n        var projectTitle = this.props.project[0][0].name;\n        return projectTitle;\n    } \n    \n    private getsubProjects(){\n        var subProjects = this.props.project[1];\n        return subProjects;\n    }\n\n    render() {\n        return (\n            <div className={this.state.open ? styles.accordianItem + \" \" + styles.activeAccItem : styles.accordianItem}>\n                {/* <div className={styles.accordianItem + \" \" + styles.activeAccItem}> */}\n                <div className={styles.accordianHeader}>\n                    <h2 className={styles.accordianWrap} onClick={() => this.togglePanel()}>\n                        <Icon iconName=\"ChevronRightSmall\" className={styles.accordianIcon} />\n                        <span className={styles.accordianHeaderText}>{this.getProjectTitle()}</span>\n                    </h2>\n                    <div className={styles.projectStatusBadge + \" \" + this.projectOverallStatus().style}>\n                        {this.projectOverallStatus().message}\n                    </div>\n                </div>\n                <div className={styles.accordianPanel}>\n                    <Scrollbars\n                        autoHeight\n                        autoHeightMin={0}\n                        autoHeightMax={250}\n                        renderTrackHorizontal={() => <div style={{ display: \"none\" }}></div>}\n                    >\n                        <div className={styles.accordianPanelContent}>\n\n                            {\n                                this.getsubProjects().map((subProject: any) => {\n                                    return(\n                                        <DashboardSubProjects key={Math.random()*1000} subProject={subProject}/>\n                                    )\n                                })\n                            }\n\n                        </div>\n\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DashboardAccordianItems;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { DatePicker } from 'office-ui-fabric-react'\nimport styles from './dashboardBody.module.scss';\nimport '../dashboard.css';\nimport $ from \"jquery\";\n\n//DashboardComponents\nimport DashboardAccordianItems from './dashboardAccordianItems';\n\n//JSON File\nimport InterestingFacts from '../../interestingFacts.json';\n\ninitializeIcons();\n\nexport interface IDashboardBodyState {\n};\nexport interface IDashboardBodyProp {\n    data: string[],\n    loadFlag: boolean\n};\nconst iWidth: any = window.innerWidth;\nclass DashboardBody extends React.Component<IDashboardBodyProp, IDashboardBodyState>{\n\n    constructor(props: IDashboardBodyProp, state: IDashboardBodyState) {\n        super(props, state);\n    }\n\n    private getProjects(){\n        var projects = this.props.data\n        return projects;\n    }\n\n\n    render() {\n        var newScore = 0;\n\n        if(this.props.loadFlag){\n            return (\n                <div className={styles.contentWrap}>\n                    <Scrollbars\n                        //autoHide\n                        style={iWidth > \"768\" ? { height: 'calc(100vh - 165px)' } : { height: 'calc(100vh - 65px)' }}\n                        renderTrackHorizontal={() => <div style={{ display: \"none\" }}></div>}\n                    >\n                        <div className={styles.innerContentWrap}>\n\n                            <div className={styles.weekPickerWrap}>\n                                <div className={styles.weekPicker}>\n                                    <span className={styles.btnPrevWeek}><Icon iconName=\"ChevronLeftMed\" /></span>\n                                    <span className={styles.weekDate}>\n                                        {/* <DatePicker\n                                            className=\"customDatepicker1\"\n                                            placeholder=\"Select a date...\"\n                                            ariaLabel=\"Select a date\"\n                                            showMonthPickerAsOverlay={true}\n                                            \n                                        /> */}\n                                        15/09/2020\n                                    </span>\n                                    <span className={styles.btnNextWeek}><Icon iconName=\"ChevronRightMed\" /></span>\n                                </div>\n                            </div>\n\n\n                            <div className={styles.accordianWrap}>\n                                {\n                                    this.getProjects().map(project => {\n                                        newScore = newScore+10;\n\n                                        return(\n                                            <DashboardAccordianItems key={Math.random()*1000} project={project} projectScore={newScore}/>\n                                        )\n                                    })\n                                }\n                            </div>\n\n                        </div>\n                    </Scrollbars>\n                </div>\n            );\n        } else{\n            var randomNumber = Math.round(Math.random()*InterestingFacts.length);\n            return (\n                <div className={styles.contentWrap}>\n                    <div className={styles.loader}></div>\n                    <p className={styles.Facts}>Did you know?<br/>{InterestingFacts[randomNumber].Fact}</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default DashboardBody;","import React from 'react';\nimport { Icon } from \"office-ui-fabric-react/lib/Icon\";\nimport { initializeIcons } from '@uifabric/icons';\nimport styles from './dashboardFooter.module.scss';\nimport '../dashboard.css';\ninitializeIcons();\n\nexport interface IDashboardFooterState {\n\n};\nexport interface IDashboardFooterProp {\n\n};\n\nclass DashboardFooter extends React.Component<IDashboardFooterProp, IDashboardFooterState>{\n\n    constructor(props: IDashboardFooterProp, state: IDashboardFooterState) {\n        super(props, state);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        return (\n\n            <footer>\n                <ul className={styles.footerWrap}>\n                    <li className={styles.footerItem}><strong>©2019 ITS Inc. All Rights Reserved.</strong></li>\n                    <li className={styles.footerItem +\" \"+ styles.mlAuto}>\n                        <a href=\"a\" className={styles.linkItem}>Company Policies</a>\n                    </li>\n                    <li className={styles.footerItem}><a href=\"a\" className={styles.linkItem}>Feedback & Support</a></li>\n                    <li className={styles.footerItem}><a href=\"a\" className={styles.linkItem}>T&C</a></li>\n                </ul>\n            </footer>\n\n        );\n    }\n}\n\nexport default DashboardFooter;","import React from 'react';\nimport { initializeIcons } from '@uifabric/icons';\nimport styles from './dashboard.module.scss';\nimport './dashboard.css';\n\n//Components\nimport DashboardHeader from './dashboardHeader/dashboardHeader';\nimport DashboardBody from './dashboardBody/dashboardBody';\nimport DashboardFooter from './dashboardFooter/dashboardFooter';\n\n//Config File\nimport { GetDashboardDetails_BASE, GetDashboardDetails_API, GetDashboardDetails_API_KEY } from '../configFile';\n\ninitializeIcons();\n\nexport interface IDashboardState {\n    data: string[],\n    loadFlag: boolean\n};\n\nexport interface IDashboardProp {\n   \n};\n\nclass Dashboard extends React.Component<IDashboardProp, IDashboardState>{\n\n    constructor(props: IDashboardProp, state: IDashboardState) {\n        super(props, state);\n\n        this.state = { data: [], loadFlag: false };\n    }\n\n    componentDidMount() {\n        //var url = GetDashboardDetails_API + \"?code=\" + GetDashboardDetails_API_KEY; //For Local Host\n        var url = GetDashboardDetails_BASE + GetDashboardDetails_API + \"?code=\" + GetDashboardDetails_API_KEY;\n        fetch(url)\n        .then(res => res.json())\n        .then(json => {\n          this.setState({data: json, loadFlag: true});\n        })\n        .catch(error => console.error('API-ERROR:' + error.toString()));\n      }\n\n    render() {\n        return (\n            <div className={styles.itsDashboard}>\n                <DashboardHeader />\n                <DashboardBody loadFlag={this.state.loadFlag} data={this.state.data}/>\n                <DashboardFooter />\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Import Component\nimport Dashboard from '../src/components/dashboard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Dashboard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}